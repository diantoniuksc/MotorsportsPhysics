@page "/race-menu"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager Nav

<PageTitle>Select Difficulty</PageTitle>

<div class="container mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 py-10">
  <h1 class="text-3xl font-bold mb-2">Choose your challenge</h1>
  @if (!string.IsNullOrWhiteSpace(_topicLabel))
  {
    <p class="text-gray-700 mb-1">Topic: <strong>@_topicLabel</strong></p>
  }
  <p class="text-gray-700 mb-8">Pick a difficulty to start the race-quiz. You can always come back and try another mode.</p>

  <div class="grid gap-6 md:grid-cols-3">
    <div class="rounded-xl border border-primary/20 bg-white p-6 shadow-sm flex flex-col">
      <h2 class="text-xl font-semibold mb-2">Easy</h2>
  <p class="text-gray-600 mb-4">Animated track + one-question-at-a-time with explanations. No rivals, no timer.</p>
    <a class="mt-auto inline-flex items-center justify-center rounded-lg bg-primary px-4 py-2 font-semibold text-white hover:bg-opacity-90"
      href="@_easyHref">Start</a>
    </div>

    <div class="rounded-xl border border-primary/20 bg-white p-6 shadow-sm flex flex-col">
      <h2 class="text-xl font-semibold mb-2">Medium</h2>
      <p class="text-gray-600 mb-4">Race five rivals as the yellow car. Explanations on. No timer. Your car never stops for unanswered questions.</p>
    <a class="mt-auto inline-flex items-center justify-center rounded-lg bg-primary px-4 py-2 font-semibold text-white hover:bg-opacity-90"
      href="@_mediumHref">Start</a>
    </div>

    <div class="rounded-xl border border-primary/20 bg-white p-6 shadow-sm flex flex-col">
      <h2 class="text-xl font-semibold mb-2">High</h2>
      <p class="text-gray-600 mb-4">Race five rivals as the yellow car. Countdown timer. Explanations off. If question n isnâ€™t answered by lap n, your car stops at start/finish while rivals keep going.</p>
    <a class="mt-auto inline-flex items-center justify-center rounded-lg bg-primary px-4 py-2 font-semibold text-white hover:bg-opacity-90"
      href="@_highHref">Start</a>
    </div>
  </div>

  <div class="mt-8 flex gap-4">
    <a class="text-primary hover:underline" href="/topics">Back to topics</a>
  </div>
</div>

@code {
  private string _topic = "cornering";
  private string _topicLabel = "Cornering Dynamics";
  private string _topicQuery = string.Empty;
  private string _easyHref = "/race-quiz?difficulty=easy";
  private string _mediumHref = "/race-quiz?difficulty=medium";
  private string _highHref = "/race-quiz?difficulty=high";

  protected override void OnInitialized()
  {
    var uri = Nav.ToAbsoluteUri(Nav.Uri);
    var query = QueryHelpers.ParseQuery(uri.Query);
    _topic = query.TryGetValue("topic", out var v) ? v.ToString() : "cornering";
    _topicLabel = _topic.ToLowerInvariant() switch
    {
      "cornering" => "Cornering Dynamics",
      "aerodynamics" => "Aerodynamics",
      "acceleration" => "Acceleration & Power",
      "topspeed" => "Top Speed & Slipstream",
      "downforce" => "Downforce & Tires",
      _ => "Cornering Dynamics"
    };
    _topicQuery = string.IsNullOrEmpty(_topic) ? string.Empty : $"&topic={_topic}";
    _easyHref = $"/race-quiz?difficulty=easy{_topicQuery}";
    _mediumHref = $"/race-quiz?difficulty=medium{_topicQuery}";
    _highHref = $"/race-quiz?difficulty=high{_topicQuery}";
  }
}
